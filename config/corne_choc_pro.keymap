/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    combos {
        compatible = "zmk,combos";

        BOOT_MODE {
            bindings = <&bootloader>;
            key-positions = <40 41 42 43 44 45>;
        };
    };

    behaviors {
        tap_pref: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "Tap Preferred";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        tab_esc: tab_esc {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_ESC";
            bindings = <&kp TAB>, <&kp ESCAPE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base Layer";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&tab_esc   &kp Q  &kp W  &kp E         &kp R           &kp T             &kp F18      &kp C_MUTE   &kp Y          &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D         &tap_pref 2 F   &kp G             &kp LC(F18)  &kp LS(F18)  &kp H          &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&mo 1      &kp Z  &kp X  &kp C         &kp V           &kp B                                       &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                         &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_COMMAND                            &kp RIGHT_ALT  &kp SPACE  &mo 3
            >;

            sensor-bindings =
                <&inc_dec_kp F16 F17>,
                <&inc_dec_kp LC(F16) LC(F17)>,
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp LS(F16) LS(F17)>;
        };

        Symbols {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH        &kp DOLLAR       &kp PERCENT  &kp LA(F18)      &kp LA(C_MUTE)   &kp CARET  &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp GRAVE        &trans       &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans       &kp LA(LC(F18))  &kp LA(LS(F18))  &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PLUS              &kp EQUAL              &kp MINUS
&trans  &trans           &trans       &trans          &trans           &trans                                         &trans     &trans            &trans             &trans                &kp BACKSLASH          &trans
                                      &trans          &trans           &trans                                         &trans     &trans            &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LA(F16) LA(F17)>,
                <&inc_dec_kp LA(LC(F16)) LA(LC(F17))>,
                <&inc_dec_kp LA(C_VOLUME_DOWN) LA(C_VOLUME_UP)>,
                <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>;
        };

        Arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 2  &trans  &trans          &kp UP_ARROW    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1  &bt BT_CLR    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                              &trans  &trans          &trans          &trans           &trans  &trans
                        &trans  &trans  &trans                              &trans  &trans          &trans
            >;
        };

        Numpad {
            bindings = <
&trans  &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_MINUS  &bt BT_SEL 0  &bt BT_SEL 2  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp KP_PLUS      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_EQUAL  &bt BT_SEL 1  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans                                    &trans  &trans  &trans  &trans  &trans  &bootloader
                                       &trans        &kp NUMBER_0  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
